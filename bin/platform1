#! /usr/bin/env ruby

require 'clamp'
require 'launchy'
require 'fileutils'
require 'yaml'

class Platform1Command < Clamp::Command

  self.description = %{
    Platform1 helps you serve your Rails/Rack app using Passenger Standalone.
  }

  subcommand "init", "Prepare to serve a new app." do

    self.description = %{
      Configure Platform1 to serve the app in the current directory.
    }

    parameter "PORT", "the port to be used for this app"

    def execute
      update_configuration do |config|
        config["port"] = port
      end
    end

  end

  subcommand "start", "Start Passenger Standalone." do

    def execute
      sh("passenger start -p #{passenger_port} -d")
    end

  end

  subcommand "stop", "Stop Passenger Standalone." do

    def execute
      sh("passenger stop -p #{passenger_port}")
    end

  end

  subcommand "status", "Show Passenger status." do

    def execute
      sh("passenger status -p #{passenger_port}")
    end

  end

  subcommand "open", "Open app in a browser." do

    parameter "[PATH]", "a path to append to the app url"
    
    def execute
      url = application_url
      if path
        url += path.sub(%r{^/}, '')
      end
      Launchy.open(url)
    end

  end

  subcommand "restart", "Ask app to restart" do

    def execute
      FileUtils.touch("tmp/restart.txt")
    end

  end

  private
  
  def passenger_port
    configuration["port"] || signal_usage_error("port not defined: please run 'init' first")
  end

  def application_url
    "http://localhost:#{passenger_port}/"
  end

  def sh(command)
    system(command) || raise("Error running: #{command.inspect}")
  end

  def config_file
    ".platform1.yml"
  end

  def configuration
    @config ||= if File.exist?(config_file)
      YAML.load_file(config_file)
    else
      {}
    end
  end

  def update_configuration
    config = configuration
    yield config
    File.open(config_file, 'w') do |out|
      YAML.dump(config, out)
    end
  end

end

Platform1Command.run
